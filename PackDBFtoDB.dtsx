<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/11/2017 10:08:43 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP"
  DTS:CreatorName="Laptop\Галина"
  DTS:DTSID="{CF2BEB27-2A05-4E46-9C1D-7E4D8CD4BAD0}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0800.90"
  DTS:LocaleID="1049"
  DTS:ObjectName="PackDBFtoDB"
  DTS:PackageType="5"
  DTS:VersionBuild="8"
  DTS:VersionGUID="{D5C699C7-AEC3-411F-926D-AB3CDAA1AF33}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[D:\DBF 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{F06D644F-5770-4BDB-9ACA-5C797E0D03B9}"
      DTS:ObjectName="D:\DBF 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=D:\DBF;Provider=Microsoft.Jet.OLEDB.4.0;Extended Properties=dBASE 5.0;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Laptop.test]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{8550A9AA-B7AA-4577-A9BF-1F70FDBE9D3D}"
      DTS:ObjectName="Laptop.test">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=Laptop;Initial Catalog=test;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Laptop.test1]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{CFF035BC-DC7C-4E61-BE2A-89BB5A0E90EB}"
      DTS:ObjectName="Laptop.test1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=Laptop;Initial Catalog=test;Integrated Security=True;Application Name=SSIS-Package-{CFF035BC-DC7C-4E61-BE2A-89BB5A0E90EB}Laptop.test1;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Import from DBF"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{23BED15E-E0D8-4AA1-8B34-C924C010F4E6}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import from DBF"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import from DBF\Change  types"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Change  types"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import from DBF\Change  types.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import from DBF\Change  types.Inputs[Data Conversion Input].Columns[Account]"
                      cachedDataType="r8"
                      cachedName="Account"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[Account]" />
                    <inputColumn
                      refId="Package\Import from DBF\Change  types.Inputs[Data Conversion Input].Columns[TypeAR]"
                      cachedDataType="i2"
                      cachedName="TypeAR"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[TypeAR]" />
                    <inputColumn
                      refId="Package\Import from DBF\Change  types.Inputs[Data Conversion Input].Columns[id_service]"
                      cachedDataType="i2"
                      cachedName="id_service"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[id_service]" />
                    <inputColumn
                      refId="Package\Import from DBF\Change  types.Inputs[Data Conversion Input].Columns[Tariff]"
                      cachedDataType="i2"
                      cachedName="Tariff"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[Tariff]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import from DBF\Change  types.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Import from DBF\Change  types.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import from DBF\Change  types.Outputs[Data Conversion Output].Columns[Copy of Account]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import from DBF\Change  types.Outputs[Data Conversion Output].Columns[Copy of Account]"
                      name="Copy of Account"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[Account]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import from DBF\Change  types.Outputs[Data Conversion Output].Columns[TypeAR4]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import from DBF\Change  types.Outputs[Data Conversion Output].Columns[TypeAR4]"
                      name="TypeAR4"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[TypeAR]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import from DBF\Change  types.Outputs[Data Conversion Output].Columns[id_service4]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import from DBF\Change  types.Outputs[Data Conversion Output].Columns[id_service4]"
                      name="id_service4"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[id_service]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import from DBF\Change  types.Outputs[Data Conversion Output].Columns[Tariff4]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import from DBF\Change  types.Outputs[Data Conversion Output].Columns[Tariff4]"
                      name="Tariff4"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[Tariff]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import from DBF\Change  types.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Import from DBF\Change  types.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import from DBF\Change  types.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import from DBF\Change  types.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import from DBF\Change  types.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import from DBF\Change  types.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import from DBF\Check Volume and CalcCost"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Check Volume and CalcCost"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import from DBF\Check Volume and CalcCost.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import from DBF\Check Volume and CalcCost.Inputs[Conditional Split Input].Columns[VolumeSum]"
                      cachedDataType="r8"
                      cachedName="VolumeSum"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[VolumeSum]" />
                    <inputColumn
                      refId="Package\Import from DBF\Check Volume and CalcCost.Inputs[Conditional Split Input].Columns[CalcCostSum]"
                      cachedDataType="r8"
                      cachedName="CalcCostSum"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[CalcCostSum]" />
                    <inputColumn
                      refId="Package\Import from DBF\Check Volume and CalcCost.Inputs[Conditional Split Input].Columns[VolumeLookUp]"
                      cachedDataType="numeric"
                      cachedName="VolumeLookUp"
                      cachedPrecision="18"
                      cachedScale="6"
                      lineageId="Package\Import from DBF\Lookup.Outputs[Lookup Match Output].Columns[VolumeLookUp]" />
                    <inputColumn
                      refId="Package\Import from DBF\Check Volume and CalcCost.Inputs[Conditional Split Input].Columns[CalcCostLookUp]"
                      cachedDataType="numeric"
                      cachedName="CalcCostLookUp"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Import from DBF\Lookup.Outputs[Lookup Match Output].Columns[CalcCostLookUp]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import from DBF\Check Volume and CalcCost.Outputs[UpdatedRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="UpdatedRows"
                  synchronousInputId="Package\Import from DBF\Check Volume and CalcCost.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[VolumeSum]} != #{Package\Import from DBF\Lookup.Outputs[Lookup Match Output].Columns[VolumeLookUp]} || #{Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[CalcCostSum]} != #{Package\Import from DBF\Lookup.Outputs[Lookup Match Output].Columns[CalcCostLookUp]}</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">Volume != VolumeLookUp || CalcCost != CalcCostLookUp</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import from DBF\Check Volume and CalcCost.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Import from DBF\Check Volume and CalcCost.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import from DBF\Check Volume and CalcCost.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Import from DBF\Check Volume and CalcCost.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import from DBF\Check Volume and CalcCost.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import from DBF\Check Volume and CalcCost.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import from DBF\Check Volume and CalcCost.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import from DBF\Check Volume and CalcCost.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import from DBF\Extract from DBF"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Extract from DBF"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">ZDOPR</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1251</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import from DBF\Extract from DBF.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[D:\DBF 1]"
                  connectionManagerRefId="Package.ConnectionManagers[D:\DBF 1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[TypeAR]"
                      dataType="i2"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[ZD1]"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[TypeAR]"
                      name="TypeAR"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[Account]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[ZD2]"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[Account]"
                      name="Account"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[id_service]"
                      dataType="i2"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[ZD3]"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[id_service]"
                      name="id_service"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[Volume]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[ZD4]"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[Volume]"
                      name="Volume"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[Tariff]"
                      dataType="i2"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[ZD5]"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[Tariff]"
                      name="Tariff"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[CalcCost]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[ZD6]"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[CalcCost]"
                      name="CalcCost"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[ZD1]"
                      dataType="i2"
                      name="ZD1" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[ZD2]"
                      dataType="r8"
                      name="ZD2" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[ZD3]"
                      dataType="i2"
                      name="ZD3" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[ZD4]"
                      dataType="r8"
                      name="ZD4" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[ZD5]"
                      dataType="i2"
                      name="ZD5" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[ZD6]"
                      dataType="r8"
                      name="ZD6" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[N_MONEY]"
                      dataType="r8"
                      name="N_MONEY" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[NB4]"
                      dataType="i2"
                      name="NB4" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[REGION]"
                      dataType="i2"
                      name="REGION" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[BS3]"
                      dataType="r8"
                      name="BS3" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[B2]"
                      dataType="wstr"
                      length="120"
                      name="B2" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[DOB5]"
                      dataType="wstr"
                      length="27"
                      name="DOB5" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[DOB2]"
                      dataType="i2"
                      name="DOB2" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[DOB3]"
                      dataType="i2"
                      name="DOB3" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[BS2]"
                      dataType="i2"
                      name="BS2" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[BS1]"
                      dataType="i2"
                      name="BS1" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[DOB4]"
                      dataType="wstr"
                      length="16"
                      name="DOB4" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[ZD7]"
                      dataType="i2"
                      name="ZD7" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[PMONTH]"
                      dataType="i2"
                      name="PMONTH" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[PYEAR]"
                      dataType="i2"
                      name="PYEAR" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[OZ_PR]"
                      dataType="wstr"
                      length="2"
                      name="OZ_PR" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].ExternalColumns[MAG]"
                      dataType="i2"
                      name="MAG" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Error Output].Columns[ZD1]"
                      dataType="i2"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Error Output].Columns[ZD1]"
                      name="ZD1" />
                    <outputColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Error Output].Columns[ZD2]"
                      dataType="r8"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Error Output].Columns[ZD2]"
                      name="ZD2" />
                    <outputColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Error Output].Columns[ZD3]"
                      dataType="i2"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Error Output].Columns[ZD3]"
                      name="ZD3" />
                    <outputColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Error Output].Columns[ZD4]"
                      dataType="r8"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Error Output].Columns[ZD4]"
                      name="ZD4" />
                    <outputColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Error Output].Columns[ZD5]"
                      dataType="i2"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Error Output].Columns[ZD5]"
                      name="ZD5" />
                    <outputColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Error Output].Columns[ZD6]"
                      dataType="r8"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Error Output].Columns[ZD6]"
                      name="ZD6" />
                    <outputColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import from DBF\Insert into ZdoprImp"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
              name="Insert into ZdoprImp"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.String"
                  description="The Destination database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."ZdoprImp"</property>
                <property
                  dataType="System.Int32"
                  description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                  expressionType="Notify"
                  name="BatchSize">0</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                  expressionType="Notify"
                  name="CommandTimeout">30</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                  expressionType="Notify"
                  name="UseBulkInsertWhenPossible">true</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ADONETDestination</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import from DBF\Insert into ZdoprImp.Connections[IDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Laptop.test1]"
                  connectionManagerRefId="Package.ConnectionManagers[Laptop.test1]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input]"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="ADO NET Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input].Columns[Account]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Account"
                      externalMetadataColumnId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input].ExternalColumns[Account]"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[Account]" />
                    <inputColumn
                      refId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input].Columns[VolumeSum]"
                      cachedDataType="r8"
                      cachedName="VolumeSum"
                      externalMetadataColumnId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input].ExternalColumns[Volume]"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[VolumeSum]" />
                    <inputColumn
                      refId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input].Columns[CalcCostSum]"
                      cachedDataType="r8"
                      cachedName="CalcCostSum"
                      externalMetadataColumnId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input].ExternalColumns[CalcCost]"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[CalcCostSum]" />
                    <inputColumn
                      refId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input].Columns[TypeAR4]"
                      cachedDataType="i4"
                      cachedName="TypeAR4"
                      externalMetadataColumnId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input].ExternalColumns[TypeAddreturns]"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[TypeAR4]" />
                    <inputColumn
                      refId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input].Columns[Tariff4]"
                      cachedDataType="i4"
                      cachedName="Tariff4"
                      externalMetadataColumnId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input].ExternalColumns[TarifNumber]"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[Tariff4]" />
                    <inputColumn
                      refId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input].Columns[id_service4]"
                      cachedDataType="i4"
                      cachedName="id_service4"
                      externalMetadataColumnId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input].ExternalColumns[id_service]"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[id_service4]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input].ExternalColumns[Account]"
                      dataType="wstr"
                      length="50"
                      name="Account" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input].ExternalColumns[TypeAddreturns]"
                      dataType="i4"
                      name="TypeAddreturns" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input].ExternalColumns[id_service]"
                      dataType="i4"
                      name="id_service" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input].ExternalColumns[Volume]"
                      dataType="numeric"
                      name="Volume"
                      precision="18"
                      scale="6" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input].ExternalColumns[TarifNumber]"
                      dataType="i4"
                      name="TarifNumber" />
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input].ExternalColumns[CalcCost]"
                      dataType="numeric"
                      name="CalcCost"
                      precision="18"
                      scale="2" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import from DBF\Insert into ZdoprImp.Outputs[ADO NET Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="ADO NET Destination Error Output"
                  synchronousInputId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import from DBF\Insert into ZdoprImp.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import from DBF\Insert into ZdoprImp.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import from DBF\Insert into ZdoprImp.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import from DBF\Insert into ZdoprImp.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import from DBF\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[ZdoprImp]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[ZdoprImp]) [refTable]
where [refTable].[Account] = ? and [refTable].[TypeAddreturns] = ? and [refTable].[TarifNumber] = ? and [refTable].[id_service] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Account" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TypeAddreturns" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="id_service" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Volume" dataType="DT_NUMERIC" length="0" precision="18" scale="6" codePage="0"/&gt;&lt;referenceColumn name="TarifNumber" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CalcCost" dataType="DT_NUMERIC" length="0" precision="18" scale="2" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[Account]};#{Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[TypeAR4]};#{Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[Tariff4]};#{Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[id_service4]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1251</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import from DBF\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Laptop.test]"
                  connectionManagerRefId="Package.ConnectionManagers[Laptop.test]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import from DBF\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import from DBF\Lookup.Inputs[Lookup Input].Columns[Account]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Account"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[Account]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Account</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import from DBF\Lookup.Inputs[Lookup Input].Columns[TypeAR4]"
                      cachedDataType="i4"
                      cachedName="TypeAR4"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[TypeAR4]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TypeAddreturns</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import from DBF\Lookup.Inputs[Lookup Input].Columns[Tariff4]"
                      cachedDataType="i4"
                      cachedName="Tariff4"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[Tariff4]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TarifNumber</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import from DBF\Lookup.Inputs[Lookup Input].Columns[id_service4]"
                      cachedDataType="i4"
                      cachedName="id_service4"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[id_service4]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">id_service</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import from DBF\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Import from DBF\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import from DBF\Lookup.Outputs[Lookup Match Output].Columns[VolumeLookUp]"
                      dataType="numeric"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Import from DBF\Lookup.Outputs[Lookup Match Output].Columns[VolumeLookUp]"
                      name="VolumeLookUp"
                      precision="18"
                      scale="6"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">Volume</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import from DBF\Lookup.Outputs[Lookup Match Output].Columns[CalcCostLookUp]"
                      dataType="numeric"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Import from DBF\Lookup.Outputs[Lookup Match Output].Columns[CalcCostLookUp]"
                      name="CalcCostLookUp"
                      precision="18"
                      scale="2"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">CalcCost</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import from DBF\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Import from DBF\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import from DBF\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Import from DBF\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import from DBF\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import from DBF\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import from DBF\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import from DBF\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import from DBF\Sum Volume_CalcCost"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Sum Volume_CalcCost"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Import from DBF\Sum Volume_CalcCost.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import from DBF\Sum Volume_CalcCost.Inputs[Aggregate Input 1].Columns[Copy of Account]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Account"
                      lineageId="Package\Import from DBF\Change  types.Outputs[Data Conversion Output].Columns[Copy of Account]" />
                    <inputColumn
                      refId="Package\Import from DBF\Sum Volume_CalcCost.Inputs[Aggregate Input 1].Columns[Volume]"
                      cachedDataType="r8"
                      cachedName="Volume"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[Volume]" />
                    <inputColumn
                      refId="Package\Import from DBF\Sum Volume_CalcCost.Inputs[Aggregate Input 1].Columns[CalcCost]"
                      cachedDataType="r8"
                      cachedName="CalcCost"
                      lineageId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[CalcCost]" />
                    <inputColumn
                      refId="Package\Import from DBF\Sum Volume_CalcCost.Inputs[Aggregate Input 1].Columns[TypeAR4]"
                      cachedDataType="i4"
                      cachedName="TypeAR4"
                      lineageId="Package\Import from DBF\Change  types.Outputs[Data Conversion Output].Columns[TypeAR4]" />
                    <inputColumn
                      refId="Package\Import from DBF\Sum Volume_CalcCost.Inputs[Aggregate Input 1].Columns[Tariff4]"
                      cachedDataType="i4"
                      cachedName="Tariff4"
                      lineageId="Package\Import from DBF\Change  types.Outputs[Data Conversion Output].Columns[Tariff4]" />
                    <inputColumn
                      refId="Package\Import from DBF\Sum Volume_CalcCost.Inputs[Aggregate Input 1].Columns[id_service4]"
                      cachedDataType="i4"
                      cachedName="id_service4"
                      lineageId="Package\Import from DBF\Change  types.Outputs[Data Conversion Output].Columns[id_service4]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[Account]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[Account]"
                      name="Account">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Import from DBF\Change  types.Outputs[Data Conversion Output].Columns[Copy of Account]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[VolumeSum]"
                      dataType="r8"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[VolumeSum]"
                      name="VolumeSum">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[Volume]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[CalcCostSum]"
                      dataType="r8"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[CalcCostSum]"
                      name="CalcCostSum">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output].Columns[CalcCost]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[TypeAR4]"
                      dataType="i4"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[TypeAR4]"
                      name="TypeAR4">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Import from DBF\Change  types.Outputs[Data Conversion Output].Columns[TypeAR4]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[Tariff4]"
                      dataType="i4"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[Tariff4]"
                      name="Tariff4">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Import from DBF\Change  types.Outputs[Data Conversion Output].Columns[Tariff4]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[id_service4]"
                      dataType="i4"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[id_service4]"
                      name="id_service4">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Import from DBF\Change  types.Outputs[Data Conversion Output].Columns[id_service4]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import from DBF\Update ZdoprImp"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update ZdoprImp"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">Update "ZdoprImp" Set Volume = ? , CalcCost = ? 
where Account = ? 
and  id_service = ? 
and TypeAddreturns = ? 
and TarifNumber = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1251</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import from DBF\Update ZdoprImp.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Laptop.test]"
                  connectionManagerRefId="Package.ConnectionManagers[Laptop.test]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input].Columns[VolumeSum]"
                      cachedDataType="r8"
                      cachedName="VolumeSum"
                      externalMetadataColumnId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[VolumeSum]" />
                    <inputColumn
                      refId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input].Columns[CalcCostSum]"
                      cachedDataType="r8"
                      cachedName="CalcCostSum"
                      externalMetadataColumnId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[CalcCostSum]" />
                    <inputColumn
                      refId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input].Columns[Account]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Account"
                      externalMetadataColumnId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[Account]" />
                    <inputColumn
                      refId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input].Columns[id_service4]"
                      cachedDataType="i4"
                      cachedName="id_service4"
                      externalMetadataColumnId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[id_service4]" />
                    <inputColumn
                      refId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input].Columns[TypeAR4]"
                      cachedDataType="i4"
                      cachedName="TypeAR4"
                      externalMetadataColumnId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[TypeAR4]" />
                    <inputColumn
                      refId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input].Columns[Tariff4]"
                      cachedDataType="i4"
                      cachedName="Tariff4"
                      externalMetadataColumnId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      lineageId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1].Columns[Tariff4]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="numeric"
                      name="Param_0"
                      precision="18"
                      scale="6">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="numeric"
                      name="Param_1"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="wstr"
                      length="50"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="i4"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="i4"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      dataType="i4"
                      name="Param_5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import from DBF\Update ZdoprImp.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import from DBF\Update ZdoprImp.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import from DBF\Update ZdoprImp.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import from DBF\Update ZdoprImp.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import from DBF\Update ZdoprImp.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import from DBF\Update ZdoprImp.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import from DBF.Paths[Aggregate Output 1]"
              endId="Package\Import from DBF\Lookup.Inputs[Lookup Input]"
              name="Aggregate Output 1"
              startId="Package\Import from DBF\Sum Volume_CalcCost.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\Import from DBF.Paths[Data Conversion Output]"
              endId="Package\Import from DBF\Sum Volume_CalcCost.Inputs[Aggregate Input 1]"
              name="Data Conversion Output"
              startId="Package\Import from DBF\Change  types.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Import from DBF.Paths[Lookup Match Output]"
              endId="Package\Import from DBF\Check Volume and CalcCost.Inputs[Conditional Split Input]"
              name="Lookup Match Output"
              startId="Package\Import from DBF\Lookup.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Import from DBF.Paths[Lookup No Match Output]"
              endId="Package\Import from DBF\Insert into ZdoprImp.Inputs[ADO NET Destination Input]"
              name="Lookup No Match Output"
              startId="Package\Import from DBF\Lookup.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Import from DBF.Paths[OLE DB Source Output]"
              endId="Package\Import from DBF\Change  types.Inputs[Data Conversion Input]"
              name="OLE DB Source Output"
              startId="Package\Import from DBF\Extract from DBF.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Import from DBF.Paths[UpdatedRows]"
              endId="Package\Import from DBF\Update ZdoprImp.Inputs[OLE DB Command Input]"
              name="UpdatedRows"
              startId="Package\Import from DBF\Check Volume and CalcCost.Outputs[UpdatedRows]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--В данном разделе CDATA содержатся сведения о макете пакета. В данном разделе содержатся сведения о координатах (x,y), ширине и высоте.-->
<!--В случае возникновения ошибки при редактировании этого раздела вручную его можно удалить. -->
<!--Пакет можно загрузить обычным образом, но прежние сведения о макете будут утеряны, и конструктор автоматически перераспределит элементы в области конструктора.-->
<Objects
  Version="8">
  <!--Все приведенные ниже узлы будут содержать свойства, не влияющие на поведение среды выполнения.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="159,42"
          Id="Package\Import from DBF"
          TopLeft="131,29" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Import from DBF">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="184,42"
          Id="Package\Import from DBF\Sum Volume_CalcCost"
          TopLeft="332,135" />
        <NodeLayout
          Size="113,42"
          Id="Package\Import from DBF\Lookup"
          TopLeft="369,204" />
        <NodeLayout
          Size="210,42"
          Id="Package\Import from DBF\Check Volume and CalcCost"
          TopLeft="365,283" />
        <NodeLayout
          Size="162,42"
          Id="Package\Import from DBF\Update ZdoprImp"
          TopLeft="390,359" />
        <NodeLayout
          Size="160,42"
          Id="Package\Import from DBF\Extract from DBF"
          TopLeft="114,63" />
        <NodeLayout
          Size="177,42"
          Id="Package\Import from DBF\Insert into ZdoprImp"
          TopLeft="94,281" />
        <NodeLayout
          Size="146,42"
          Id="Package\Import from DBF\Change  types"
          TopLeft="346,66" />
        <EdgeLayout
          Id="Package\Import from DBF.Paths[UpdatedRows]"
          TopLeft="470.5,325">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-39.66623046875,5.25,61.683046875,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import from DBF.Paths[OLE DB Source Output]"
          TopLeft="274,85.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="72,0"
              Start="0,0"
              End="64.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="64.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import from DBF.Paths[Lookup No Match Output]"
          TopLeft="408,246">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-225.5,35"
              Start="0,0"
              End="-225.5,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.2931937172775" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.2931937172775"
                    Point2="0,14.2931937172775"
                    Point3="-4,14.2931937172775" />
                  <mssgle:LineSegment
                    End="-221.5,14.2931937172775" />
                  <mssgle:CubicBezierSegment
                    Point1="-221.5,14.2931937172775"
                    Point2="-225.5,14.2931937172775"
                    Point3="-225.5,18.2931937172775" />
                  <mssgle:LineSegment
                    End="-225.5,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-168.55638671875,19.2931937172775,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import from DBF.Paths[Lookup Match Output]"
          TopLeft="443,246">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="27,37"
              Start="0,0"
              End="27,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.1099476439791" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.1099476439791"
                    Point2="0,15.1099476439791"
                    Point3="4,15.1099476439791" />
                  <mssgle:LineSegment
                    End="23,15.1099476439791" />
                  <mssgle:CubicBezierSegment
                    Point1="23,15.1099476439791"
                    Point2="27,15.1099476439791"
                    Point3="27,19.1099476439791" />
                  <mssgle:LineSegment
                    End="27,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-34.69138671875,20.1099476439791,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import from DBF.Paths[Data Conversion Output]"
          TopLeft="421.5,108">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27"
              Start="0,0"
              End="0,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import from DBF.Paths[Aggregate Output 1]"
          TopLeft="424.75,177">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27"
              Start="0,0"
              End="0,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import from DBF\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[ZdoprImp]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import from DBF\Extract from DBF">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import from DBF\Insert into ZdoprImp">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>