<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/5/2017 3:58:47 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP"
  DTS:CreatorName="Laptop\Галина"
  DTS:DTSID="{C40B6EA5-5FDA-456F-BC4F-79595A447193}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0800.90"
  DTS:LocaleID="1049"
  DTS:ObjectName="PackDtFlTask"
  DTS:PackageType="5"
  DTS:VersionBuild="19"
  DTS:VersionGUID="{2DA2971A-628B-4AD0-AF67-0A9625ED8CD9}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LAPTOP.AdventureWorks2014.sa1]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{3A208BFF-2EC4-4E08-87B0-44B627A9E6B4}"
      DTS:ObjectName="LAPTOP.AdventureWorks2014.sa1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=LAPTOP;User ID=sa;Initial Catalog=AdventureWorks2014;Persist Security Info=True;Application Name=SSIS-Package-{3A208BFF-2EC4-4E08-87B0-44B627A9E6B4}LAPTOP.AdventureWorks2014.sa1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA6S/60Kkn2EqKSqDsfQHTUQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAABlM4RSdxGtVbHmKmERLgVVFCCf0fuudZ0Wpv9VLk2pRAAAAAAOgAAAAAIAACAAAABdTYHa+lABEvl7Pv7xlP/FbY2QgzYyZxbfpjAcXB4mWRAAAABUbLLa+IseB/rA0Rzloh2+QAAAAMX8j90C/8usPe7XMY25ILsxu05Be/FLyTjITvoumzVi8D3Z3J542CrdDkYFywAvPz8n8dUQr6fueDtQBo4qee0</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Laptop.test]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{20CDE249-2B44-4180-9012-F9E4325E4285}"
      DTS:ObjectName="Laptop.test">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=Laptop;Initial Catalog=test;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Laptop.test.sa]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{57118C11-6439-4907-88D7-FEC0885A0431}"
      DTS:ObjectName="Laptop.test.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=Laptop;Initial Catalog=test;Integrated Security=True;Application Name=SSIS-Package-{57118C11-6439-4907-88D7-FEC0885A0431}Laptop.test.sa;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DDC49A51-3F4E-4DCE-8E84-8BCC8C11ED39}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentDate">
      <DTS:VariableValue
        DTS:DataType="7">7/5/2017 4:17:46 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6E460DAE-0C72-4FD9-A8B9-0AACDB9F8B61}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DictionaryName">
      <DTS:VariableValue
        DTS:DataType="8">AddressType</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{41908556-8662-462D-B9C5-FC2740FBC5ED}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachItemEnumerator"
        DTS:DTSID="{301DBDD8-D38F-40BE-94DE-D227CD0FDEE3}"
        DTS:ObjectName="{301DBDD8-D38F-40BE-94DE-D227CD0FDEE3}">
        <DTS:ObjectData>
          <FEIEItems>
            <FEIEItem>
              <FEIEItemValue
                Type="8"
                Value="AddressType" />
            </FEIEItem>
          </FEIEItems>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Import Dictinaries"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{CD0F55C6-F3B5-4E8A-A12B-FF4834E968B9}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Import Dictinaries"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="[AddressType].[TableOrViewName]">"\"dbo\".\"" + @[User::DictionaryName] + "\""</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="[Lookup].[SqlCommand]">"select * from [dbo].[" + @[User::DictionaryName] + "]"</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="[Lookup].[SqlCommandParam]">"select * from (select * from [dbo].[" + @[User::DictionaryName]  + "]) [refTable] where [refTable].[Id] = ?"</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="[Person_Address_Type].[SqlCommand]">"select " + @[User::DictionaryName]  + "ID AS Id, Name from Person." + @[User::DictionaryName]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="[Update AddressType].[SqlCommand]">"UPDATE \"" + @[User::DictionaryName]  + "\" SET Name = ? WHERE Id = ?"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Import Dictinaries\AddressType"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
                  name="AddressType"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.String"
                      description="The Destination database table name."
                      expressionType="Notify"
                      name="TableOrViewName"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."AddressType"</property>
                    <property
                      dataType="System.Int32"
                      description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                      expressionType="Notify"
                      name="BatchSize">0</property>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                      expressionType="Notify"
                      name="CommandTimeout">30</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                      expressionType="Notify"
                      name="UseBulkInsertWhenPossible">true</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ADONETDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Import Dictinaries\AddressType.Connections[IDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Laptop.test.sa]"
                      connectionManagerRefId="Package.ConnectionManagers[Laptop.test.sa]"
                      description="Managed connection manager"
                      name="IDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Import Dictinaries\AddressType.Inputs[ADO NET Destination Input]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="ADO NET Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\AddressType.Inputs[ADO NET Destination Input].Columns[Id]"
                          cachedDataType="i4"
                          cachedName="Id"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import Dictinaries\AddressType.Inputs[ADO NET Destination Input].ExternalColumns[Id]"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Output].Columns[Id]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\AddressType.Inputs[ADO NET Destination Input].Columns[Name]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Name"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import Dictinaries\AddressType.Inputs[ADO NET Destination Input].ExternalColumns[Name]"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Output].Columns[Name]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\AddressType.Inputs[ADO NET Destination Input].ExternalColumns[Id]"
                          dataType="i4"
                          name="Id" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\AddressType.Inputs[ADO NET Destination Input].ExternalColumns[Name]"
                          dataType="wstr"
                          length="50"
                          name="Name" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Import Dictinaries\AddressType.Outputs[ADO NET Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="ADO NET Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Import Dictinaries\AddressType.Inputs[ADO NET Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\AddressType.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\AddressType.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\AddressType.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\AddressType.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Import Dictinaries\Filter Name Changes"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Filter Name Changes"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Import Dictinaries\Filter Name Changes.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Filter Name Changes.Inputs[Conditional Split Input].Columns[Name]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Name"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Output].Columns[Name]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Filter Name Changes.Inputs[Conditional Split Input].Columns[LookupName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="LookupName"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Outputs[Lookup Match Output].Columns[LookupName]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Import Dictinaries\Filter Name Changes.Outputs[UpdatedRows]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="UpdatedRows"
                      synchronousInputId="Package\Foreach Loop Container\Import Dictinaries\Filter Name Changes.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Foreach Loop Container\Import Dictinaries\Lookup.Outputs[Lookup Match Output].Columns[LookupName]} != #{Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Output].Columns[Name]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">LookupName != name</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Import Dictinaries\Filter Name Changes.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Container\Import Dictinaries\Filter Name Changes.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Import Dictinaries\Filter Name Changes.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Import Dictinaries\Filter Name Changes.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Filter Name Changes.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Filter Name Changes.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Filter Name Changes.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Filter Name Changes.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Import Dictinaries\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[AddressType]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[AddressType]) [refTable] where [refTable].[Id] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Output].Columns[Id]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1251</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Laptop.test]"
                      connectionManagerRefId="Package.ConnectionManagers[Laptop.test]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Inputs[Lookup Input].Columns[Id]"
                          cachedDataType="i4"
                          cachedName="Id"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Output].Columns[Id]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Id</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Outputs[Lookup Match Output].Columns[LookupName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Outputs[Lookup Match Output].Columns[LookupName]"
                          name="LookupName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Name</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
                  name="Person_Address_Type"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement used by the component to extract data."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select AddressTypeID AS Id, Name from Person.AddressType</property>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">30</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                      name="AllowImplicitStringConversion">true</property>
                    <property
                      dataType="System.String"
                      description="The Source database table name."
                      expressionType="Notify"
                      name="TableOrViewName"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"Person"."AddressType"</property>
                    <property
                      dataType="System.Int32"
                      description="Specify the mode to retrieve external column information"
                      name="AccessMode"
                      typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Connections[IDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP.AdventureWorks2014.sa1]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP.AdventureWorks2014.sa1]"
                      description="Managed connection manager"
                      name="IDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Output]"
                      name="ADO NET Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Output].Columns[Id]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Output].ExternalColumns[Id]"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Output].Columns[Id]"
                          name="Id"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Output].Columns[Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Output].ExternalColumns[Name]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Output].Columns[Name]"
                          name="Name"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Output].ExternalColumns[Id]"
                          dataType="i4"
                          name="Id" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Output].ExternalColumns[Name]"
                          dataType="wstr"
                          length="50"
                          name="Name" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Error Output]"
                      isErrorOut="true"
                      name="ADO NET Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Error Output].Columns[Id]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Error Output].Columns[Id]"
                          name="Id" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Error Output].Columns[Name]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Error Output].Columns[Name]"
                          name="Name" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Import Dictinaries\Update AddressType"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Update AddressType"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">UPDATE "AddressType" SET Name = ? WHERE Id = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1251</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Import Dictinaries\Update AddressType.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Laptop.test]"
                      connectionManagerRefId="Package.ConnectionManagers[Laptop.test]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Import Dictinaries\Update AddressType.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Update AddressType.Inputs[OLE DB Command Input].Columns[Name]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Name"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import Dictinaries\Update AddressType.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Output].Columns[Name]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Update AddressType.Inputs[OLE DB Command Input].Columns[Id]"
                          cachedDataType="i4"
                          cachedName="Id"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import Dictinaries\Update AddressType.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Output].Columns[Id]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Update AddressType.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          dataType="wstr"
                          length="50"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Update AddressType.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          dataType="i4"
                          name="Param_1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Import Dictinaries\Update AddressType.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Foreach Loop Container\Import Dictinaries\Update AddressType.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Import Dictinaries\Update AddressType.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Import Dictinaries\Update AddressType.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Update AddressType.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Update AddressType.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import Dictinaries\Update AddressType.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Import Dictinaries\Update AddressType.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Import Dictinaries.Paths[ADO NET Source Output]"
                  endId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Inputs[Lookup Input]"
                  name="ADO NET Source Output"
                  startId="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type.Outputs[ADO NET Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Import Dictinaries.Paths[Lookup Match Output]"
                  endId="Package\Foreach Loop Container\Import Dictinaries\Filter Name Changes.Inputs[Conditional Split Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Import Dictinaries.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container\Import Dictinaries\AddressType.Inputs[ADO NET Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\Import Dictinaries\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Import Dictinaries.Paths[UpdatedRows]"
                  endId="Package\Foreach Loop Container\Import Dictinaries\Update AddressType.Inputs[OLE DB Command Input]"
                  name="UpdatedRows"
                  startId="Package\Foreach Loop Container\Import Dictinaries\Filter Name Changes.Outputs[UpdatedRows]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{50C24729-814D-444A-845D-84A65A9AA578}"
          DTS:ObjectName="{50C24729-814D-444A-845D-84A65A9AA578}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::DictionaryName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize Variables"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{4E2A4F49-7582-4D9F-8EC0-7322F81478D1}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize Variables"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData />
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--В данном разделе CDATA содержатся сведения о макете пакета. В данном разделе содержатся сведения о координатах (x,y), ширине и высоте.-->
<!--В случае возникновения ошибки при редактировании этого раздела вручную его можно удалить. -->
<!--Пакет можно загрузить обычным образом, но прежние сведения о макете будут утеряны, и конструктор автоматически перераспределит элементы в области конструктора.-->
<Objects
  Version="8">
  <!--Все приведенные ниже узлы будут содержать свойства, не влияющие на поведение среды выполнения.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Import Dictinaries"
          TopLeft="20,7" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="214,104"
          Size="214,147"
          Id="Package\Foreach Loop Container"
          TopLeft="135,124" />
        <NodeLayout
          Size="164,42"
          Id="Package\Initialize Variables"
          TopLeft="137,55" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Import Dictinaries">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="131,42"
          Id="Package\Foreach Loop Container\Import Dictinaries\Lookup"
          TopLeft="379,45" />
        <NodeLayout
          Size="176,42"
          Id="Package\Foreach Loop Container\Import Dictinaries\Update AddressType"
          TopLeft="377,232" />
        <NodeLayout
          Size="183,42"
          Id="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type"
          TopLeft="66,43" />
        <NodeLayout
          Size="139,42"
          Id="Package\Foreach Loop Container\Import Dictinaries\AddressType"
          TopLeft="67,231" />
        <NodeLayout
          Size="177,42"
          Id="Package\Foreach Loop Container\Import Dictinaries\Filter Name Changes"
          TopLeft="374,160" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Import Dictinaries.Paths[Lookup Match Output]"
          TopLeft="466.75,87">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,73"
              Start="0,0"
              End="0,65.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,26.9453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Import Dictinaries.Paths[ADO NET Source Output]"
          TopLeft="249,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="130,0"
              Start="0,0"
              End="122.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="122.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Import Dictinaries.Paths[UpdatedRows]"
          TopLeft="463.75,202">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-30.8415234375,5.4453125,61.683046875,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Import Dictinaries.Paths[Lookup No Match Output]"
          TopLeft="406,87">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-269.5,144"
              Start="0,0"
              End="-269.5,136.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.6425339366516" />
                  <mssgle:CubicBezierSegment
                    Point1="0,54.6425339366516"
                    Point2="0,58.6425339366516"
                    Point3="-4,58.6425339366516" />
                  <mssgle:LineSegment
                    End="-265.5,58.6425339366516" />
                  <mssgle:CubicBezierSegment
                    Point1="-265.5,58.6425339366516"
                    Point2="-269.5,58.6425339366516"
                    Point3="-269.5,62.6425339366516" />
                  <mssgle:LineSegment
                    End="-269.5,136.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-190.55638671875,63.6425339366516,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Import Dictinaries\Person_Address_Type">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Import Dictinaries\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[AddressType]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Import Dictinaries\AddressType">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>